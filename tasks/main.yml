---
# tasks file for redis
- name: Install redis packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    "{{ redis_packages }}"

# Simple check - these are done by the package installation
- name: Validate data dir exists
  file:
    path: "{{ redis_data_dir }}"
    state: directory
    owner: redis
    group: redis
    mode: 0755

- name: Validate that log directory exists
  file:
    path: "{{ redis_log_dir }}"
    state: directory
    owner: redis
    group: redis
    mode: 0755

- name: Validate that log directory exists
  file:
    path: "{{ redis_run_dir }}"
    state: directory
    owner: redis
    group: redis
    mode: 0755

- name: Install redis gem
  package:
    name: rubygem-redis

- name: Install redis-trib from localfile.
  copy:
    src: redis-trib
    dest: /usr/bin/redis-trib
    mode: 0755

# Prepare the nodes
- name: Create the node data sub-directory
  file:
    path: "{{ redis_data_dir }}/{{ redis_port }}"
    state: directory
    owner: redis
    group: redis

# Add the ports to SELINUX context redis_t (port + cluster port)
- name: Installe policy support packages
  package:
    name: policycoreutils-python

- name: Add port to redis selinux profile
  seport:
    ports: "{{ redis_port }},{{ redis_port + 10000 }}"
    proto: tcp
    setype: redis_port_t
    state: present

- name: Create the cluster node redis.conf
  template:
    src: "redis.conf.j2"
    dest: "/etc/redis_{{ redis_port }}.conf"

- name: Create the node redis service file
  template:
    src: "redis.service.j2"
    dest: "/usr/lib/systemd/system/redis_{{ redis_port }}.service"

- name: start and enable the redis node.
  service:
    name: redis_{{ redis_port }}
    state: started
    enabled: yes


# Test that all nodes are up
# Cluster them.
